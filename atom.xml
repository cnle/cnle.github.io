<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cnle.github.io</id>
    <title>Live every day happily </title>
    <updated>2021-09-30T13:07:56.198Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cnle.github.io"/>
    <link rel="self" href="https://cnle.github.io/atom.xml"/>
    <subtitle>A website for ordinary people </subtitle>
    <logo>https://cnle.github.io/images/avatar.png</logo>
    <icon>https://cnle.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Live every day happily </rights>
    <entry>
        <title type="html"><![CDATA[国外vps共享公网流量赚取收益！]]></title>
        <id>https://cnle.github.io/post/pee/</id>
        <link href="https://cnle.github.io/post/pee/">
        </link>
        <updated>2021-09-30T12:36:13.000Z</updated>
        <content type="html"><![CDATA[<p>官网地址：https://peer2profit.com/r/163299318361557f9fd0631<br>
进入注册账号（推荐谷歌账号直接登陆），支持微软,linux,安卓多平台！</p>
<p>linux服务器教程：<br>
wget https://updates.peer2profit.com/p2pclient<br>
备用地址：https://img.zeruns.tech/down/p2pclient</p>
<pre><code>cd /etc/systemd/sytem/
vi /Peer2Profit.service
</code></pre>
<p>配置文件：</p>
<pre><code>[Unit]
Description=Peer2Profit
[Service]
Type=simple
ExecStart=/opt/p2pclient -l xxxx@gmail.com
TimeoutSec=15
Restart=always

[Install]
WantedBy=multi-user.target
</code></pre>
<p>#自行替换邮箱地址</p>
<h1 id="开机自启配置">开机自启配置</h1>
<pre><code>systemctl enable Peer2Profit
</code></pre>
<h1 id="启动服务">启动服务</h1>
<pre><code>systemctl start Peer2Profit
</code></pre>
<h1 id="查看状态">查看状态</h1>
<pre><code>systemctl status Peer2Profit
</code></pre>
<p>看到绿色小圆点说明运行成功，去网站后台查看流量！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux搭建ikev2协议的Vpn]]></title>
        <id>https://cnle.github.io/post/5/</id>
        <link href="https://cnle.github.io/post/5/">
        </link>
        <updated>2021-07-10T01:43:41.000Z</updated>
        <content type="html"><![CDATA[<h2 id="输入virt-what可以看到vps的虚拟架构~">输入virt-what，可以看到vps的虚拟架构~</h2>
<h2 id="服务端要求">服务端要求：</h2>
<blockquote>
<p>Ubuntu或者CentOS-6/7或者Debian</p>
</blockquote>
<h2 id="客户端">客户端：</h2>
<blockquote>
<p>iOS/OSX=&gt;ikev1,ikev2<br>
Andriod=&gt;ikev1<br>
WindowsPhone=&gt;ikev2<br>
其 他Windows平台=&gt;ikev2</p>
</blockquote>
<h2 id="1输入ifconfig查看公网接口名称稍后用到然后下载脚本">1.输入ifconfig查看公网接口名称稍后用到，然后下载脚本:</h2>
<blockquote>
<p>wget https://raw.githubusercontent.com/cnle/README/main/one-key-ikev2.sh</p>
</blockquote>
<h2 id="2若需受信任证书请提前把证书放在脚本目录给权限并运行">2.若需受信任证书，请提前把证书放在脚本目录，给权限并运行</h2>
<pre><code>chmod +x one-key-ikev2.sh
bash one-key-ikev2.sh
</code></pre>
<h2 id="证书格式">证书格式</h2>
<pre><code>a.ca.cert.pem 证书颁发机构的CA，比如Let‘s Encrypt的证书,或者其他链证书；
b.server.cert.pem 签发的域名证书；
c.server.pem 签发域名证书时用的私钥；
</code></pre>
<h2 id="3选择vps类型openvz还是xen-kvm选错将安装出错">3.选择vps类型（OpenVZ还是Xen、KVM），选错将安装出错。</h2>
<h2 id="4输入服务器ip或者绑定的域名连接vpn时服务器地址将需要与此保持一致如果是导入泛域名证书这里需要写-域名com的形式">4.输入服务器ip或者绑定的域名(连接vpn时服务器地址将需要与此保持一致,如果是导入泛域名证书这里需要写**. 域名.com的形式。</h2>
<h2 id="5选择证书类型">5.选择证书类型</h2>
<ul>
<li>选择no，使用自签名证书（需要填写自签名的证书的相关信息(C,O,CN)，为空将使用默认值）</li>
<li>安装过程中会出现输入两次pkcs12证书的密码的提示，可以设置为空。选择yes，使用受信任证书。</li>
</ul>
<p>6.提示是否使用SNAT规则(可选).默认为不使用。使用前请确保服务器具有不变的静态公网ip,可提升防火墙对数据包的处理速度.如果服务器网络设置了NAT(如AWS的弹性ip机制),则填写网卡连接接口的ip地址。</p>
<p>7.防火墙的配置.默认配置是iptables。如果使用的是firewall(如CentOS7，请选择yes，会自动配置firewall,将无视SNAT并跳过后续的补充网卡接口步骤)。补充网卡接口信息,为空则使用默认值(Xen、KVM默认使用eth0,OpenVZ默认使用venet0).如果使用其他公网接口需要在此指定接口名称,填写错误VPN连接后将无法访问外网)</p>
<p>8.等待安装完成，会出现默认用户名和配置文件地址。（提示：修改配置时，多用户时用户名不能使用%any），自签名证书请将提示信息中的证书文件ca.cert.pem拷贝到客户端，修改后缀名为.cer后导入。ios设备使用Ikev1无需导入证书，而是需要在连接时输入共享密钥，共享密钥即是提示信息中的黄字PSK.</p>
<h2 id="可连接但是无法访问网络">可连接但是无法访问网络：</h2>
<blockquote>
<p>检查iptables是否正常启用,检查iptables规则是否与其他地方冲突,或根据服务器防火墙的实际情况手动修改配置。<br>
检查sysctl是否开启ip_forward:<br>
打开sysctl文件:vim /etc/sysctl.conf<br>
修改net.ipv4.ip_forward=1后保存并关闭文件<br>
使用以下指令刷新sysctl：sysctl -p<br>
如执行后正常回显则表示生效。如显示错误信息，请重新打开/etc/syctl并根据错误信息对应部分用#号注释，保存后再刷新sysctl直至不会报错为止。<br>
如果之前使用的自签名证书，后改用SSL证书，部分客户端可能需要卸载之前安装的自签名证书,否则可能会报Ike凭证不可接受的错误</p>
</blockquote>
<h2 id="卸载的方法">卸载的方法</h2>
<h3 id="进入脚本所在目录的strongswan文件夹执行">进入脚本所在目录的strongswan文件夹执行:</h3>
<pre><code>make uninstall
</code></pre>
<p>删除脚本所在目录的相关文件(one-key-ikev2.sh,strongswan.tar.gz,strongswan文件夹,my_key文件夹).</p>
<h2 id="卸载后记得检查iptables配置">卸载后记得检查iptables配置.</h2>
<p>##设置开机自启动服务，添加/usr/local/sbin/ipsec start到自启动脚本文件中(如rc.local等)：<br>
##ipsec常用指令:<br>
ipsec start   #启动服务<br>
ipsec stop    #关闭服务<br>
ipsec restart #重启服务<br>
ipsec reload  #重新读取<br>
ipsec status  #查看状态<br>
ipsec --help  #查看帮助</p>
<p>本文搬运于:https://github.com/quericy/one-key-ikev2-vpn~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux安装轻量图形桌面环境]]></title>
        <id>https://cnle.github.io/post/4/</id>
        <link href="https://cnle.github.io/post/4/">
        </link>
        <updated>2021-07-09T09:11:18.000Z</updated>
        <content type="html"><![CDATA[<p>搭建测试环境为滴滴云的ubuntu 18.04</p>
<p>首先，root账户默认登录不上图形界面<br>
so，在这之前 必须新建一个有权限的普通账户！</p>
<p>adduser+用户名 //自定义名字<br>
输入visudo命令<br>
该命令实际上打开的是/etc/sudoers文件，在“root ALL=(ALL:ALL) ALL”加入以下一行：<br>
lin ALL=(ALL:ALL) ALL 然后 ctrl + x 退出，是否保存选择yes，再按Enter键退出</p>
<p>添加用户到超级组，例如添加 lin 到 sudo 组<br>
sudo usermod -aG sudo lin 或者，使用这个也能成功 sudo adduser lin sudo</p>
<p>查看用户所在组<br>
id 用户名</p>
<p>安装界面：<br>
更换阿里源<br>
vi /etc/apt/sources.list<br>
百度搜索18.04阿里源替换进去！<br>
sudo apt update</p>
<p>安装i3wm<br>
xfce4 只安装了其核心，提供一些X11基本功能<br>
sudo apt-get install xfce4<br>
sudo apt-get install i3<br>
安装登陆界面管理器：<br>
sudo apt-get install lightdm<br>
完成输入reboot重启</p>
<p>控制面板的vnc进去就是图形界面！</p>
<p>安装gdebi：<br>
sudo apt-get install gdebi</p>
<p>就可以使用gdebi安装xx.deb等自己下载的文件了！<br>
cd 安装包的目录<br>
sudo gdebi sougou.deb</p>
<p>提示：如果安装不了idena.deb请试试安装最新的nodejs 和 npm！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于linux一些命令]]></title>
        <id>https://cnle.github.io/post/3/</id>
        <link href="https://cnle.github.io/post/3/">
        </link>
        <updated>2021-07-09T07:23:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="笨牛网">笨牛网</h2>
<p>1，添加came/ip接入，解析记录到自己服务器的真实ip<br>
2，去域名所在服务商解析came到（你的域名.cdn.cloudflare.net）选境外。<br>
继续在服务商解析，然后挑一个cf的ip段，添加A记录解析到国内或电信移动联通，推荐解析商 dnspod（华为，阿里）~</p>
<p>socat IPv6#IPv4端口转发<br>
apt install socat<br>
screen -S rr<br>
socat  -d -d -lf /var/log/socat.log TCP6-LISTEN:2052,bind=[2607:fcd0:fa80:2a1a:dfca:5c2f:480f:970v],reuseaddr,fork TCP4:127.0.0.1:2052</p>
<p>##查看当前vps虚拟架构<br>
virt-whtat</p>
<h1 id="apache2绑定域名">Apache2绑定域名</h1>
<pre><code>sudo apt-get install apache2
</code></pre>
<p>启动apache2服务<br>
/etc/init.d/apache2 start<br>
编辑apache2配置文件：<br>
vi /etc/apache2/sites-enabled/000-default.conf<br>
Documentroot下面一行添加<br>
Servername baidu.com<br>
重启apache2：<br>
/etc/init.d/apache2 restart</p>
<h1 id="pscp使用命令">pscp使用命令</h1>
<pre><code>pscp -P 22 D:\1\1.zip root@173.82.57.888:/etc/123
</code></pre>
<h2 id="ipv4端口转发">ipv4端口转发</h2>
<pre><code>apt-get install rinetd
vi /etc/rinetd.conf
0.0.0.0 9999 127.0.0.1 9009
/usr/sbin/rinetd             ##启动转发
rinetd                            ##启动程序：
/etc/init.d/rinetd restart ##重启软件
pkill rinetd                     ##关闭进程
</code></pre>
<h2 id="putty隧道">putty隧道</h2>
<p>本地与服务器ipv4映射<br>
1.找到SSH--Tunnels--sourceport 设置 9999 ---Destination设置 localhost:9009 点击add</p>
<h1 id="ubuntu增加swap临时增加虚拟内存">ubuntu增加swap，临时增加虚拟内存</h1>
<pre><code>free -h
sudo dd if=/dev/zero of=/var/swap bs=1024 count=2048000
sudo mkswap /var/swap
sudo mkswap -f /var/swap
sudo swapon /var/swap
free -h
</code></pre>
<p>永久性：<br>
sudo vi /etc/fstab<br>
添加一行: /swap/swapfile swap swap defaults 0 0<br>
取消swap<br>
sudo swapoff /var/swap<br>
free -h</p>
<h2 id="windows节点转发">windows节点转发</h2>
<p>1.portTunnels.exe<br>
2.netsh<br>
查看状态：<br>
netsh interface portproxy show v4tov4<br>
创建转发：<br>
netsh interface portproxy add v4tov4 listenaddress=[外网IP] listenport=[外网端口] connectaddress=[内网IP] connectport=[内网端口]<br>
删除规则：<br>
netsh interface portproxy delete v4tov4 listenaddress=[外网IP] listenport=[外网端口]</p>
<h2 id="rein-跨平台通用-支持mac3264位winlinuxarm3264位liunx">rein 跨平台通用-支持mac，32.64位win.linux，arm32.64位liunx</h2>
<blockquote>
<p>下载地址：<br>
https://github.com/firstboot/rein/releases/tag/v1.0.6-bin<br>
生成默认配置：<br>
./rein-e-detail-upstream （端口转发）<br>
-e-detail-inps （内网穿透服务器）<br>
-e-detail-inpc （内网穿透客户端）<br>
-e-detail-fileshare （FTP文件服务）<br>
运行<br>
./rein -c rein.json</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[欢迎访问我的第一个博客]]></title>
        <id>https://cnle.github.io/post/1/</id>
        <link href="https://cnle.github.io/post/1/">
        </link>
        <updated>2021-07-09T06:43:22.000Z</updated>
        <content type="html"><![CDATA[<p>我就试试看能不能搞成，看来还是成功了呀</p>
]]></content>
    </entry>
</feed>